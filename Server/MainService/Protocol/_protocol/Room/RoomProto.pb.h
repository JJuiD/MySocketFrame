// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomProto.proto

#ifndef PROTOBUF_INCLUDED_RoomProto_2eproto
#define PROTOBUF_INCLUDED_RoomProto_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "RoomBase.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_RoomProto_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_RoomProto_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_RoomProto_2eproto();
namespace Proto {
namespace RoomProto {
class ReqCreateRoom;
class ReqCreateRoomDefaultTypeInternal;
extern ReqCreateRoomDefaultTypeInternal _ReqCreateRoom_default_instance_;
class ReqJoinRoom;
class ReqJoinRoomDefaultTypeInternal;
extern ReqJoinRoomDefaultTypeInternal _ReqJoinRoom_default_instance_;
class RespCreateRoom;
class RespCreateRoomDefaultTypeInternal;
extern RespCreateRoomDefaultTypeInternal _RespCreateRoom_default_instance_;
class RespJoinRoom;
class RespJoinRoomDefaultTypeInternal;
extern RespJoinRoomDefaultTypeInternal _RespJoinRoom_default_instance_;
}  // namespace RoomProto
}  // namespace Proto
namespace google {
namespace protobuf {
template<> ::Proto::RoomProto::ReqCreateRoom* Arena::CreateMaybeMessage<::Proto::RoomProto::ReqCreateRoom>(Arena*);
template<> ::Proto::RoomProto::ReqJoinRoom* Arena::CreateMaybeMessage<::Proto::RoomProto::ReqJoinRoom>(Arena*);
template<> ::Proto::RoomProto::RespCreateRoom* Arena::CreateMaybeMessage<::Proto::RoomProto::RespCreateRoom>(Arena*);
template<> ::Proto::RoomProto::RespJoinRoom* Arena::CreateMaybeMessage<::Proto::RoomProto::RespJoinRoom>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Proto {
namespace RoomProto {

// ===================================================================

class ReqCreateRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto.RoomProto.ReqCreateRoom) */ {
 public:
  ReqCreateRoom();
  virtual ~ReqCreateRoom();

  ReqCreateRoom(const ReqCreateRoom& from);

  inline ReqCreateRoom& operator=(const ReqCreateRoom& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqCreateRoom(ReqCreateRoom&& from) noexcept
    : ReqCreateRoom() {
    *this = ::std::move(from);
  }

  inline ReqCreateRoom& operator=(ReqCreateRoom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqCreateRoom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqCreateRoom* internal_default_instance() {
    return reinterpret_cast<const ReqCreateRoom*>(
               &_ReqCreateRoom_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ReqCreateRoom* other);
  friend void swap(ReqCreateRoom& a, ReqCreateRoom& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqCreateRoom* New() const final {
    return CreateMaybeMessage<ReqCreateRoom>(nullptr);
  }

  ReqCreateRoom* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqCreateRoom>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqCreateRoom& from);
  void MergeFrom(const ReqCreateRoom& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqCreateRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:Proto.RoomProto.ReqCreateRoom)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  friend struct ::TableStruct_RoomProto_2eproto;
};
// -------------------------------------------------------------------

class RespCreateRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto.RoomProto.RespCreateRoom) */ {
 public:
  RespCreateRoom();
  virtual ~RespCreateRoom();

  RespCreateRoom(const RespCreateRoom& from);

  inline RespCreateRoom& operator=(const RespCreateRoom& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RespCreateRoom(RespCreateRoom&& from) noexcept
    : RespCreateRoom() {
    *this = ::std::move(from);
  }

  inline RespCreateRoom& operator=(RespCreateRoom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RespCreateRoom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RespCreateRoom* internal_default_instance() {
    return reinterpret_cast<const RespCreateRoom*>(
               &_RespCreateRoom_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RespCreateRoom* other);
  friend void swap(RespCreateRoom& a, RespCreateRoom& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RespCreateRoom* New() const final {
    return CreateMaybeMessage<RespCreateRoom>(nullptr);
  }

  RespCreateRoom* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RespCreateRoom>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RespCreateRoom& from);
  void MergeFrom(const RespCreateRoom& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespCreateRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Proto.RoomBase.FlagMsg data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::Proto::RoomBase::FlagMsg& data() const;
  ::Proto::RoomBase::FlagMsg* release_data();
  ::Proto::RoomBase::FlagMsg* mutable_data();
  void set_allocated_data(::Proto::RoomBase::FlagMsg* data);

  // required uint32 roomid = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Proto.RoomProto.RespCreateRoom)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::Proto::RoomBase::FlagMsg* data_;
  ::google::protobuf::uint32 roomid_;
  friend struct ::TableStruct_RoomProto_2eproto;
};
// -------------------------------------------------------------------

class ReqJoinRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto.RoomProto.ReqJoinRoom) */ {
 public:
  ReqJoinRoom();
  virtual ~ReqJoinRoom();

  ReqJoinRoom(const ReqJoinRoom& from);

  inline ReqJoinRoom& operator=(const ReqJoinRoom& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqJoinRoom(ReqJoinRoom&& from) noexcept
    : ReqJoinRoom() {
    *this = ::std::move(from);
  }

  inline ReqJoinRoom& operator=(ReqJoinRoom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqJoinRoom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqJoinRoom* internal_default_instance() {
    return reinterpret_cast<const ReqJoinRoom*>(
               &_ReqJoinRoom_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ReqJoinRoom* other);
  friend void swap(ReqJoinRoom& a, ReqJoinRoom& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqJoinRoom* New() const final {
    return CreateMaybeMessage<ReqJoinRoom>(nullptr);
  }

  ReqJoinRoom* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqJoinRoom>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqJoinRoom& from);
  void MergeFrom(const ReqJoinRoom& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqJoinRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required uint32 roomid = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Proto.RoomProto.ReqJoinRoom)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::uint32 roomid_;
  friend struct ::TableStruct_RoomProto_2eproto;
};
// -------------------------------------------------------------------

class RespJoinRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto.RoomProto.RespJoinRoom) */ {
 public:
  RespJoinRoom();
  virtual ~RespJoinRoom();

  RespJoinRoom(const RespJoinRoom& from);

  inline RespJoinRoom& operator=(const RespJoinRoom& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RespJoinRoom(RespJoinRoom&& from) noexcept
    : RespJoinRoom() {
    *this = ::std::move(from);
  }

  inline RespJoinRoom& operator=(RespJoinRoom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RespJoinRoom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RespJoinRoom* internal_default_instance() {
    return reinterpret_cast<const RespJoinRoom*>(
               &_RespJoinRoom_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RespJoinRoom* other);
  friend void swap(RespJoinRoom& a, RespJoinRoom& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RespJoinRoom* New() const final {
    return CreateMaybeMessage<RespJoinRoom>(nullptr);
  }

  RespJoinRoom* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RespJoinRoom>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RespJoinRoom& from);
  void MergeFrom(const RespJoinRoom& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespJoinRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Proto.RoomBase.UserInfo userinfo = 2;
  int userinfo_size() const;
  void clear_userinfo();
  static const int kUserinfoFieldNumber = 2;
  ::Proto::RoomBase::UserInfo* mutable_userinfo(int index);
  ::google::protobuf::RepeatedPtrField< ::Proto::RoomBase::UserInfo >*
      mutable_userinfo();
  const ::Proto::RoomBase::UserInfo& userinfo(int index) const;
  ::Proto::RoomBase::UserInfo* add_userinfo();
  const ::google::protobuf::RepeatedPtrField< ::Proto::RoomBase::UserInfo >&
      userinfo() const;

  // optional .Proto.RoomBase.FlagMsg data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::Proto::RoomBase::FlagMsg& data() const;
  ::Proto::RoomBase::FlagMsg* release_data();
  ::Proto::RoomBase::FlagMsg* mutable_data();
  void set_allocated_data(::Proto::RoomBase::FlagMsg* data);

  // @@protoc_insertion_point(class_scope:Proto.RoomProto.RespJoinRoom)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Proto::RoomBase::UserInfo > userinfo_;
  ::Proto::RoomBase::FlagMsg* data_;
  friend struct ::TableStruct_RoomProto_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReqCreateRoom

// required string id = 1;
inline bool ReqCreateRoom::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqCreateRoom::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ReqCreateRoom::id() const {
  // @@protoc_insertion_point(field_get:Proto.RoomProto.ReqCreateRoom.id)
  return id_.GetNoArena();
}
inline void ReqCreateRoom::set_id(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.RoomProto.ReqCreateRoom.id)
}
#if LANG_CXX11
inline void ReqCreateRoom::set_id(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto.RoomProto.ReqCreateRoom.id)
}
#endif
inline void ReqCreateRoom::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.RoomProto.ReqCreateRoom.id)
}
inline void ReqCreateRoom::set_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.RoomProto.ReqCreateRoom.id)
}
inline ::std::string* ReqCreateRoom::mutable_id() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:Proto.RoomProto.ReqCreateRoom.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqCreateRoom::release_id() {
  // @@protoc_insertion_point(field_release:Proto.RoomProto.ReqCreateRoom.id)
  if (!has_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqCreateRoom::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Proto.RoomProto.ReqCreateRoom.id)
}

// -------------------------------------------------------------------

// RespCreateRoom

// optional .Proto.RoomBase.FlagMsg data = 1;
inline bool RespCreateRoom::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::Proto::RoomBase::FlagMsg& RespCreateRoom::data() const {
  const ::Proto::RoomBase::FlagMsg* p = data_;
  // @@protoc_insertion_point(field_get:Proto.RoomProto.RespCreateRoom.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::Proto::RoomBase::FlagMsg*>(
      &::Proto::RoomBase::_FlagMsg_default_instance_);
}
inline ::Proto::RoomBase::FlagMsg* RespCreateRoom::release_data() {
  // @@protoc_insertion_point(field_release:Proto.RoomProto.RespCreateRoom.data)
  _has_bits_[0] &= ~0x00000001u;
  ::Proto::RoomBase::FlagMsg* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::Proto::RoomBase::FlagMsg* RespCreateRoom::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::Proto::RoomBase::FlagMsg>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Proto.RoomProto.RespCreateRoom.data)
  return data_;
}
inline void RespCreateRoom::set_allocated_data(::Proto::RoomBase::FlagMsg* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:Proto.RoomProto.RespCreateRoom.data)
}

// required uint32 roomid = 2;
inline bool RespCreateRoom::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RespCreateRoom::clear_roomid() {
  roomid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 RespCreateRoom::roomid() const {
  // @@protoc_insertion_point(field_get:Proto.RoomProto.RespCreateRoom.roomid)
  return roomid_;
}
inline void RespCreateRoom::set_roomid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:Proto.RoomProto.RespCreateRoom.roomid)
}

// -------------------------------------------------------------------

// ReqJoinRoom

// required string id = 1;
inline bool ReqJoinRoom::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqJoinRoom::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ReqJoinRoom::id() const {
  // @@protoc_insertion_point(field_get:Proto.RoomProto.ReqJoinRoom.id)
  return id_.GetNoArena();
}
inline void ReqJoinRoom::set_id(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.RoomProto.ReqJoinRoom.id)
}
#if LANG_CXX11
inline void ReqJoinRoom::set_id(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto.RoomProto.ReqJoinRoom.id)
}
#endif
inline void ReqJoinRoom::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.RoomProto.ReqJoinRoom.id)
}
inline void ReqJoinRoom::set_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.RoomProto.ReqJoinRoom.id)
}
inline ::std::string* ReqJoinRoom::mutable_id() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:Proto.RoomProto.ReqJoinRoom.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqJoinRoom::release_id() {
  // @@protoc_insertion_point(field_release:Proto.RoomProto.ReqJoinRoom.id)
  if (!has_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqJoinRoom::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Proto.RoomProto.ReqJoinRoom.id)
}

// required uint32 roomid = 2;
inline bool ReqJoinRoom::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqJoinRoom::clear_roomid() {
  roomid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 ReqJoinRoom::roomid() const {
  // @@protoc_insertion_point(field_get:Proto.RoomProto.ReqJoinRoom.roomid)
  return roomid_;
}
inline void ReqJoinRoom::set_roomid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  roomid_ = value;
  // @@protoc_insertion_point(field_set:Proto.RoomProto.ReqJoinRoom.roomid)
}

// -------------------------------------------------------------------

// RespJoinRoom

// optional .Proto.RoomBase.FlagMsg data = 1;
inline bool RespJoinRoom::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::Proto::RoomBase::FlagMsg& RespJoinRoom::data() const {
  const ::Proto::RoomBase::FlagMsg* p = data_;
  // @@protoc_insertion_point(field_get:Proto.RoomProto.RespJoinRoom.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::Proto::RoomBase::FlagMsg*>(
      &::Proto::RoomBase::_FlagMsg_default_instance_);
}
inline ::Proto::RoomBase::FlagMsg* RespJoinRoom::release_data() {
  // @@protoc_insertion_point(field_release:Proto.RoomProto.RespJoinRoom.data)
  _has_bits_[0] &= ~0x00000001u;
  ::Proto::RoomBase::FlagMsg* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::Proto::RoomBase::FlagMsg* RespJoinRoom::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::Proto::RoomBase::FlagMsg>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Proto.RoomProto.RespJoinRoom.data)
  return data_;
}
inline void RespJoinRoom::set_allocated_data(::Proto::RoomBase::FlagMsg* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:Proto.RoomProto.RespJoinRoom.data)
}

// repeated .Proto.RoomBase.UserInfo userinfo = 2;
inline int RespJoinRoom::userinfo_size() const {
  return userinfo_.size();
}
inline ::Proto::RoomBase::UserInfo* RespJoinRoom::mutable_userinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Proto.RoomProto.RespJoinRoom.userinfo)
  return userinfo_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::RoomBase::UserInfo >*
RespJoinRoom::mutable_userinfo() {
  // @@protoc_insertion_point(field_mutable_list:Proto.RoomProto.RespJoinRoom.userinfo)
  return &userinfo_;
}
inline const ::Proto::RoomBase::UserInfo& RespJoinRoom::userinfo(int index) const {
  // @@protoc_insertion_point(field_get:Proto.RoomProto.RespJoinRoom.userinfo)
  return userinfo_.Get(index);
}
inline ::Proto::RoomBase::UserInfo* RespJoinRoom::add_userinfo() {
  // @@protoc_insertion_point(field_add:Proto.RoomProto.RespJoinRoom.userinfo)
  return userinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::RoomBase::UserInfo >&
RespJoinRoom::userinfo() const {
  // @@protoc_insertion_point(field_list:Proto.RoomProto.RespJoinRoom.userinfo)
  return userinfo_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace RoomProto
}  // namespace Proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_RoomProto_2eproto
