// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserProto.proto

#ifndef PROTOBUF_INCLUDED_UserProto_2eproto
#define PROTOBUF_INCLUDED_UserProto_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "RoomBase.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_UserProto_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_UserProto_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_UserProto_2eproto();
namespace Proto {
namespace UserProto {
class ReqCreateUser;
class ReqCreateUserDefaultTypeInternal;
extern ReqCreateUserDefaultTypeInternal _ReqCreateUser_default_instance_;
class ReqGetUser;
class ReqGetUserDefaultTypeInternal;
extern ReqGetUserDefaultTypeInternal _ReqGetUser_default_instance_;
class RespCreateUser;
class RespCreateUserDefaultTypeInternal;
extern RespCreateUserDefaultTypeInternal _RespCreateUser_default_instance_;
class RespGetUser;
class RespGetUserDefaultTypeInternal;
extern RespGetUserDefaultTypeInternal _RespGetUser_default_instance_;
}  // namespace UserProto
}  // namespace Proto
namespace google {
namespace protobuf {
template<> ::Proto::UserProto::ReqCreateUser* Arena::CreateMaybeMessage<::Proto::UserProto::ReqCreateUser>(Arena*);
template<> ::Proto::UserProto::ReqGetUser* Arena::CreateMaybeMessage<::Proto::UserProto::ReqGetUser>(Arena*);
template<> ::Proto::UserProto::RespCreateUser* Arena::CreateMaybeMessage<::Proto::UserProto::RespCreateUser>(Arena*);
template<> ::Proto::UserProto::RespGetUser* Arena::CreateMaybeMessage<::Proto::UserProto::RespGetUser>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Proto {
namespace UserProto {

// ===================================================================

class ReqCreateUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto.UserProto.ReqCreateUser) */ {
 public:
  ReqCreateUser();
  virtual ~ReqCreateUser();

  ReqCreateUser(const ReqCreateUser& from);

  inline ReqCreateUser& operator=(const ReqCreateUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqCreateUser(ReqCreateUser&& from) noexcept
    : ReqCreateUser() {
    *this = ::std::move(from);
  }

  inline ReqCreateUser& operator=(ReqCreateUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqCreateUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqCreateUser* internal_default_instance() {
    return reinterpret_cast<const ReqCreateUser*>(
               &_ReqCreateUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ReqCreateUser* other);
  friend void swap(ReqCreateUser& a, ReqCreateUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqCreateUser* New() const final {
    return CreateMaybeMessage<ReqCreateUser>(nullptr);
  }

  ReqCreateUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqCreateUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqCreateUser& from);
  void MergeFrom(const ReqCreateUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqCreateUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Proto.UserProto.ReqCreateUser)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_UserProto_2eproto;
};
// -------------------------------------------------------------------

class RespCreateUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto.UserProto.RespCreateUser) */ {
 public:
  RespCreateUser();
  virtual ~RespCreateUser();

  RespCreateUser(const RespCreateUser& from);

  inline RespCreateUser& operator=(const RespCreateUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RespCreateUser(RespCreateUser&& from) noexcept
    : RespCreateUser() {
    *this = ::std::move(from);
  }

  inline RespCreateUser& operator=(RespCreateUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RespCreateUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RespCreateUser* internal_default_instance() {
    return reinterpret_cast<const RespCreateUser*>(
               &_RespCreateUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RespCreateUser* other);
  friend void swap(RespCreateUser& a, RespCreateUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RespCreateUser* New() const final {
    return CreateMaybeMessage<RespCreateUser>(nullptr);
  }

  RespCreateUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RespCreateUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RespCreateUser& from);
  void MergeFrom(const RespCreateUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespCreateUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Proto.RoomBase.FlagMsg data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::Proto::RoomBase::FlagMsg& data() const;
  ::Proto::RoomBase::FlagMsg* release_data();
  ::Proto::RoomBase::FlagMsg* mutable_data();
  void set_allocated_data(::Proto::RoomBase::FlagMsg* data);

  // optional .Proto.RoomBase.UserInfo userinfo = 2;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserinfoFieldNumber = 2;
  const ::Proto::RoomBase::UserInfo& userinfo() const;
  ::Proto::RoomBase::UserInfo* release_userinfo();
  ::Proto::RoomBase::UserInfo* mutable_userinfo();
  void set_allocated_userinfo(::Proto::RoomBase::UserInfo* userinfo);

  // @@protoc_insertion_point(class_scope:Proto.UserProto.RespCreateUser)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::Proto::RoomBase::FlagMsg* data_;
  ::Proto::RoomBase::UserInfo* userinfo_;
  friend struct ::TableStruct_UserProto_2eproto;
};
// -------------------------------------------------------------------

class ReqGetUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto.UserProto.ReqGetUser) */ {
 public:
  ReqGetUser();
  virtual ~ReqGetUser();

  ReqGetUser(const ReqGetUser& from);

  inline ReqGetUser& operator=(const ReqGetUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqGetUser(ReqGetUser&& from) noexcept
    : ReqGetUser() {
    *this = ::std::move(from);
  }

  inline ReqGetUser& operator=(ReqGetUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqGetUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqGetUser* internal_default_instance() {
    return reinterpret_cast<const ReqGetUser*>(
               &_ReqGetUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ReqGetUser* other);
  friend void swap(ReqGetUser& a, ReqGetUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqGetUser* New() const final {
    return CreateMaybeMessage<ReqGetUser>(nullptr);
  }

  ReqGetUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqGetUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqGetUser& from);
  void MergeFrom(const ReqGetUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqGetUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:Proto.UserProto.ReqGetUser)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  friend struct ::TableStruct_UserProto_2eproto;
};
// -------------------------------------------------------------------

class RespGetUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto.UserProto.RespGetUser) */ {
 public:
  RespGetUser();
  virtual ~RespGetUser();

  RespGetUser(const RespGetUser& from);

  inline RespGetUser& operator=(const RespGetUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RespGetUser(RespGetUser&& from) noexcept
    : RespGetUser() {
    *this = ::std::move(from);
  }

  inline RespGetUser& operator=(RespGetUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RespGetUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RespGetUser* internal_default_instance() {
    return reinterpret_cast<const RespGetUser*>(
               &_RespGetUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RespGetUser* other);
  friend void swap(RespGetUser& a, RespGetUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RespGetUser* New() const final {
    return CreateMaybeMessage<RespGetUser>(nullptr);
  }

  RespGetUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RespGetUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RespGetUser& from);
  void MergeFrom(const RespGetUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespGetUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Proto.RoomBase.FlagMsg data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::Proto::RoomBase::FlagMsg& data() const;
  ::Proto::RoomBase::FlagMsg* release_data();
  ::Proto::RoomBase::FlagMsg* mutable_data();
  void set_allocated_data(::Proto::RoomBase::FlagMsg* data);

  // optional .Proto.RoomBase.UserInfo userinfo = 2;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserinfoFieldNumber = 2;
  const ::Proto::RoomBase::UserInfo& userinfo() const;
  ::Proto::RoomBase::UserInfo* release_userinfo();
  ::Proto::RoomBase::UserInfo* mutable_userinfo();
  void set_allocated_userinfo(::Proto::RoomBase::UserInfo* userinfo);

  // @@protoc_insertion_point(class_scope:Proto.UserProto.RespGetUser)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::Proto::RoomBase::FlagMsg* data_;
  ::Proto::RoomBase::UserInfo* userinfo_;
  friend struct ::TableStruct_UserProto_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReqCreateUser

// required string name = 1;
inline bool ReqCreateUser::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqCreateUser::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ReqCreateUser::name() const {
  // @@protoc_insertion_point(field_get:Proto.UserProto.ReqCreateUser.name)
  return name_.GetNoArena();
}
inline void ReqCreateUser::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.UserProto.ReqCreateUser.name)
}
#if LANG_CXX11
inline void ReqCreateUser::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto.UserProto.ReqCreateUser.name)
}
#endif
inline void ReqCreateUser::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.UserProto.ReqCreateUser.name)
}
inline void ReqCreateUser::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.UserProto.ReqCreateUser.name)
}
inline ::std::string* ReqCreateUser::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:Proto.UserProto.ReqCreateUser.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqCreateUser::release_name() {
  // @@protoc_insertion_point(field_release:Proto.UserProto.ReqCreateUser.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqCreateUser::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Proto.UserProto.ReqCreateUser.name)
}

// -------------------------------------------------------------------

// RespCreateUser

// optional .Proto.RoomBase.FlagMsg data = 1;
inline bool RespCreateUser::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::Proto::RoomBase::FlagMsg& RespCreateUser::data() const {
  const ::Proto::RoomBase::FlagMsg* p = data_;
  // @@protoc_insertion_point(field_get:Proto.UserProto.RespCreateUser.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::Proto::RoomBase::FlagMsg*>(
      &::Proto::RoomBase::_FlagMsg_default_instance_);
}
inline ::Proto::RoomBase::FlagMsg* RespCreateUser::release_data() {
  // @@protoc_insertion_point(field_release:Proto.UserProto.RespCreateUser.data)
  _has_bits_[0] &= ~0x00000001u;
  ::Proto::RoomBase::FlagMsg* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::Proto::RoomBase::FlagMsg* RespCreateUser::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::Proto::RoomBase::FlagMsg>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Proto.UserProto.RespCreateUser.data)
  return data_;
}
inline void RespCreateUser::set_allocated_data(::Proto::RoomBase::FlagMsg* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:Proto.UserProto.RespCreateUser.data)
}

// optional .Proto.RoomBase.UserInfo userinfo = 2;
inline bool RespCreateUser::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::Proto::RoomBase::UserInfo& RespCreateUser::userinfo() const {
  const ::Proto::RoomBase::UserInfo* p = userinfo_;
  // @@protoc_insertion_point(field_get:Proto.UserProto.RespCreateUser.userinfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::Proto::RoomBase::UserInfo*>(
      &::Proto::RoomBase::_UserInfo_default_instance_);
}
inline ::Proto::RoomBase::UserInfo* RespCreateUser::release_userinfo() {
  // @@protoc_insertion_point(field_release:Proto.UserProto.RespCreateUser.userinfo)
  _has_bits_[0] &= ~0x00000002u;
  ::Proto::RoomBase::UserInfo* temp = userinfo_;
  userinfo_ = nullptr;
  return temp;
}
inline ::Proto::RoomBase::UserInfo* RespCreateUser::mutable_userinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (userinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::Proto::RoomBase::UserInfo>(GetArenaNoVirtual());
    userinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Proto.UserProto.RespCreateUser.userinfo)
  return userinfo_;
}
inline void RespCreateUser::set_allocated_userinfo(::Proto::RoomBase::UserInfo* userinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(userinfo_);
  }
  if (userinfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      userinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, userinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  userinfo_ = userinfo;
  // @@protoc_insertion_point(field_set_allocated:Proto.UserProto.RespCreateUser.userinfo)
}

// -------------------------------------------------------------------

// ReqGetUser

// required string id = 1;
inline bool ReqGetUser::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGetUser::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ReqGetUser::id() const {
  // @@protoc_insertion_point(field_get:Proto.UserProto.ReqGetUser.id)
  return id_.GetNoArena();
}
inline void ReqGetUser::set_id(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.UserProto.ReqGetUser.id)
}
#if LANG_CXX11
inline void ReqGetUser::set_id(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto.UserProto.ReqGetUser.id)
}
#endif
inline void ReqGetUser::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.UserProto.ReqGetUser.id)
}
inline void ReqGetUser::set_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.UserProto.ReqGetUser.id)
}
inline ::std::string* ReqGetUser::mutable_id() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:Proto.UserProto.ReqGetUser.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqGetUser::release_id() {
  // @@protoc_insertion_point(field_release:Proto.UserProto.ReqGetUser.id)
  if (!has_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqGetUser::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Proto.UserProto.ReqGetUser.id)
}

// -------------------------------------------------------------------

// RespGetUser

// optional .Proto.RoomBase.FlagMsg data = 1;
inline bool RespGetUser::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::Proto::RoomBase::FlagMsg& RespGetUser::data() const {
  const ::Proto::RoomBase::FlagMsg* p = data_;
  // @@protoc_insertion_point(field_get:Proto.UserProto.RespGetUser.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::Proto::RoomBase::FlagMsg*>(
      &::Proto::RoomBase::_FlagMsg_default_instance_);
}
inline ::Proto::RoomBase::FlagMsg* RespGetUser::release_data() {
  // @@protoc_insertion_point(field_release:Proto.UserProto.RespGetUser.data)
  _has_bits_[0] &= ~0x00000001u;
  ::Proto::RoomBase::FlagMsg* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::Proto::RoomBase::FlagMsg* RespGetUser::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::Proto::RoomBase::FlagMsg>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Proto.UserProto.RespGetUser.data)
  return data_;
}
inline void RespGetUser::set_allocated_data(::Proto::RoomBase::FlagMsg* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:Proto.UserProto.RespGetUser.data)
}

// optional .Proto.RoomBase.UserInfo userinfo = 2;
inline bool RespGetUser::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::Proto::RoomBase::UserInfo& RespGetUser::userinfo() const {
  const ::Proto::RoomBase::UserInfo* p = userinfo_;
  // @@protoc_insertion_point(field_get:Proto.UserProto.RespGetUser.userinfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::Proto::RoomBase::UserInfo*>(
      &::Proto::RoomBase::_UserInfo_default_instance_);
}
inline ::Proto::RoomBase::UserInfo* RespGetUser::release_userinfo() {
  // @@protoc_insertion_point(field_release:Proto.UserProto.RespGetUser.userinfo)
  _has_bits_[0] &= ~0x00000002u;
  ::Proto::RoomBase::UserInfo* temp = userinfo_;
  userinfo_ = nullptr;
  return temp;
}
inline ::Proto::RoomBase::UserInfo* RespGetUser::mutable_userinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (userinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::Proto::RoomBase::UserInfo>(GetArenaNoVirtual());
    userinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Proto.UserProto.RespGetUser.userinfo)
  return userinfo_;
}
inline void RespGetUser::set_allocated_userinfo(::Proto::RoomBase::UserInfo* userinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(userinfo_);
  }
  if (userinfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      userinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, userinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  userinfo_ = userinfo;
  // @@protoc_insertion_point(field_set_allocated:Proto.UserProto.RespGetUser.userinfo)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace UserProto
}  // namespace Proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_UserProto_2eproto
