// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomProto.proto

#include "RoomProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_RoomBase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FlagMsg_RoomBase_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_RoomBase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserInfo_RoomBase_2eproto;
namespace Proto {
namespace RoomProto {
class ReqCreateRoomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqCreateRoom> _instance;
} _ReqCreateRoom_default_instance_;
class RespCreateRoomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RespCreateRoom> _instance;
} _RespCreateRoom_default_instance_;
class ReqJoinRoomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqJoinRoom> _instance;
} _ReqJoinRoom_default_instance_;
class RespJoinRoomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RespJoinRoom> _instance;
} _RespJoinRoom_default_instance_;
}  // namespace RoomProto
}  // namespace Proto
static void InitDefaultsReqCreateRoom_RoomProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::RoomProto::_ReqCreateRoom_default_instance_;
    new (ptr) ::Proto::RoomProto::ReqCreateRoom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::RoomProto::ReqCreateRoom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqCreateRoom_RoomProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqCreateRoom_RoomProto_2eproto}, {}};

static void InitDefaultsRespCreateRoom_RoomProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::RoomProto::_RespCreateRoom_default_instance_;
    new (ptr) ::Proto::RoomProto::RespCreateRoom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::RoomProto::RespCreateRoom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RespCreateRoom_RoomProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRespCreateRoom_RoomProto_2eproto}, {
      &scc_info_FlagMsg_RoomBase_2eproto.base,}};

static void InitDefaultsReqJoinRoom_RoomProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::RoomProto::_ReqJoinRoom_default_instance_;
    new (ptr) ::Proto::RoomProto::ReqJoinRoom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::RoomProto::ReqJoinRoom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqJoinRoom_RoomProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqJoinRoom_RoomProto_2eproto}, {}};

static void InitDefaultsRespJoinRoom_RoomProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::RoomProto::_RespJoinRoom_default_instance_;
    new (ptr) ::Proto::RoomProto::RespJoinRoom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::RoomProto::RespJoinRoom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RespJoinRoom_RoomProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRespJoinRoom_RoomProto_2eproto}, {
      &scc_info_FlagMsg_RoomBase_2eproto.base,
      &scc_info_UserInfo_RoomBase_2eproto.base,}};

void InitDefaults_RoomProto_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ReqCreateRoom_RoomProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RespCreateRoom_RoomProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqJoinRoom_RoomProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RespJoinRoom_RoomProto_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_RoomProto_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_RoomProto_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_RoomProto_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_RoomProto_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::ReqCreateRoom, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::ReqCreateRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::ReqCreateRoom, id_),
  0,
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::RespCreateRoom, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::RespCreateRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::RespCreateRoom, data_),
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::RespCreateRoom, roomid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::ReqJoinRoom, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::ReqJoinRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::ReqJoinRoom, id_),
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::ReqJoinRoom, roomid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::RespJoinRoom, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::RespJoinRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::RespJoinRoom, data_),
  PROTOBUF_FIELD_OFFSET(::Proto::RoomProto::RespJoinRoom, userinfo_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::Proto::RoomProto::ReqCreateRoom)},
  { 7, 14, sizeof(::Proto::RoomProto::RespCreateRoom)},
  { 16, 23, sizeof(::Proto::RoomProto::ReqJoinRoom)},
  { 25, 32, sizeof(::Proto::RoomProto::RespJoinRoom)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::RoomProto::_ReqCreateRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::RoomProto::_RespCreateRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::RoomProto::_ReqJoinRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::RoomProto::_RespJoinRoom_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_RoomProto_2eproto = {
  {}, AddDescriptors_RoomProto_2eproto, "RoomProto.proto", schemas,
  file_default_instances, TableStruct_RoomProto_2eproto::offsets,
  file_level_metadata_RoomProto_2eproto, 4, file_level_enum_descriptors_RoomProto_2eproto, file_level_service_descriptors_RoomProto_2eproto,
};

const char descriptor_table_protodef_RoomProto_2eproto[] =
  "\n\017RoomProto.proto\022\017Proto.RoomProto\032\016Room"
  "Base.proto\"\033\n\rReqCreateRoom\022\n\n\002id\030\001 \002(\t\""
  "G\n\016RespCreateRoom\022%\n\004data\030\001 \001(\0132\027.Proto."
  "RoomBase.FlagMsg\022\016\n\006roomid\030\002 \002(\r\")\n\013ReqJ"
  "oinRoom\022\n\n\002id\030\001 \002(\t\022\016\n\006roomid\030\002 \002(\r\"a\n\014R"
  "espJoinRoom\022%\n\004data\030\001 \001(\0132\027.Proto.RoomBa"
  "se.FlagMsg\022*\n\010userinfo\030\002 \003(\0132\030.Proto.Roo"
  "mBase.UserInfo"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_RoomProto_2eproto = {
  false, InitDefaults_RoomProto_2eproto, 
  descriptor_table_protodef_RoomProto_2eproto,
  "RoomProto.proto", &assign_descriptors_table_RoomProto_2eproto, 294,
};

void AddDescriptors_RoomProto_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_RoomBase_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_RoomProto_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_RoomProto_2eproto = []() { AddDescriptors_RoomProto_2eproto(); return true; }();
namespace Proto {
namespace RoomProto {

// ===================================================================

void ReqCreateRoom::InitAsDefaultInstance() {
}
class ReqCreateRoom::HasBitSetters {
 public:
  static void set_has_id(ReqCreateRoom* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqCreateRoom::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqCreateRoom::ReqCreateRoom()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.RoomProto.ReqCreateRoom)
}
ReqCreateRoom::ReqCreateRoom(const ReqCreateRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:Proto.RoomProto.ReqCreateRoom)
}

void ReqCreateRoom::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReqCreateRoom_RoomProto_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqCreateRoom::~ReqCreateRoom() {
  // @@protoc_insertion_point(destructor:Proto.RoomProto.ReqCreateRoom)
  SharedDtor();
}

void ReqCreateRoom::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqCreateRoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqCreateRoom& ReqCreateRoom::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReqCreateRoom_RoomProto_2eproto.base);
  return *internal_default_instance();
}


void ReqCreateRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.RoomProto.ReqCreateRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqCreateRoom::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReqCreateRoom*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Proto.RoomProto.ReqCreateRoom.id");
        auto str = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqCreateRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.RoomProto.ReqCreateRoom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Proto.RoomProto.ReqCreateRoom.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.RoomProto.ReqCreateRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.RoomProto.ReqCreateRoom)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqCreateRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.RoomProto.ReqCreateRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Proto.RoomProto.ReqCreateRoom.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.RoomProto.ReqCreateRoom)
}

::google::protobuf::uint8* ReqCreateRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.RoomProto.ReqCreateRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Proto.RoomProto.ReqCreateRoom.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.RoomProto.ReqCreateRoom)
  return target;
}

size_t ReqCreateRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.RoomProto.ReqCreateRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqCreateRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.RoomProto.ReqCreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqCreateRoom* source =
      ::google::protobuf::DynamicCastToGenerated<ReqCreateRoom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.RoomProto.ReqCreateRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.RoomProto.ReqCreateRoom)
    MergeFrom(*source);
  }
}

void ReqCreateRoom::MergeFrom(const ReqCreateRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.RoomProto.ReqCreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    _has_bits_[0] |= 0x00000001u;
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void ReqCreateRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.RoomProto.ReqCreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqCreateRoom::CopyFrom(const ReqCreateRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.RoomProto.ReqCreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCreateRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ReqCreateRoom::Swap(ReqCreateRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqCreateRoom::InternalSwap(ReqCreateRoom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ReqCreateRoom::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RoomProto_2eproto);
  return ::file_level_metadata_RoomProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RespCreateRoom::InitAsDefaultInstance() {
  ::Proto::RoomProto::_RespCreateRoom_default_instance_._instance.get_mutable()->data_ = const_cast< ::Proto::RoomBase::FlagMsg*>(
      ::Proto::RoomBase::FlagMsg::internal_default_instance());
}
class RespCreateRoom::HasBitSetters {
 public:
  static const ::Proto::RoomBase::FlagMsg& data(const RespCreateRoom* msg);
  static void set_has_data(RespCreateRoom* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_roomid(RespCreateRoom* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::Proto::RoomBase::FlagMsg&
RespCreateRoom::HasBitSetters::data(const RespCreateRoom* msg) {
  return *msg->data_;
}
void RespCreateRoom::clear_data() {
  if (data_ != nullptr) data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RespCreateRoom::kDataFieldNumber;
const int RespCreateRoom::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RespCreateRoom::RespCreateRoom()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.RoomProto.RespCreateRoom)
}
RespCreateRoom::RespCreateRoom(const RespCreateRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::Proto::RoomBase::FlagMsg(*from.data_);
  } else {
    data_ = nullptr;
  }
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:Proto.RoomProto.RespCreateRoom)
}

void RespCreateRoom::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RespCreateRoom_RoomProto_2eproto.base);
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&data_)) + sizeof(roomid_));
}

RespCreateRoom::~RespCreateRoom() {
  // @@protoc_insertion_point(destructor:Proto.RoomProto.RespCreateRoom)
  SharedDtor();
}

void RespCreateRoom::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void RespCreateRoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespCreateRoom& RespCreateRoom::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RespCreateRoom_RoomProto_2eproto.base);
  return *internal_default_instance();
}


void RespCreateRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.RoomProto.RespCreateRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(data_ != nullptr);
    data_->Clear();
  }
  roomid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RespCreateRoom::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RespCreateRoom*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .Proto.RoomBase.FlagMsg data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Proto::RoomBase::FlagMsg::_InternalParse;
        object = msg->mutable_data();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // required uint32 roomid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::uint32 value = val;
        msg->set_roomid(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RespCreateRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.RoomProto.RespCreateRoom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Proto.RoomBase.FlagMsg data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_roomid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.RoomProto.RespCreateRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.RoomProto.RespCreateRoom)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RespCreateRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.RoomProto.RespCreateRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Proto.RoomBase.FlagMsg data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::data(this), output);
  }

  // required uint32 roomid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->roomid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.RoomProto.RespCreateRoom)
}

::google::protobuf::uint8* RespCreateRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.RoomProto.RespCreateRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Proto.RoomBase.FlagMsg data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::data(this), deterministic, target);
  }

  // required uint32 roomid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->roomid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.RoomProto.RespCreateRoom)
  return target;
}

size_t RespCreateRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.RoomProto.RespCreateRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 roomid = 2;
  if (has_roomid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .Proto.RoomBase.FlagMsg data = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespCreateRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.RoomProto.RespCreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const RespCreateRoom* source =
      ::google::protobuf::DynamicCastToGenerated<RespCreateRoom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.RoomProto.RespCreateRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.RoomProto.RespCreateRoom)
    MergeFrom(*source);
  }
}

void RespCreateRoom::MergeFrom(const RespCreateRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.RoomProto.RespCreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_data()->::Proto::RoomBase::FlagMsg::MergeFrom(from.data());
    }
    if (cached_has_bits & 0x00000002u) {
      roomid_ = from.roomid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RespCreateRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.RoomProto.RespCreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespCreateRoom::CopyFrom(const RespCreateRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.RoomProto.RespCreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespCreateRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void RespCreateRoom::Swap(RespCreateRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RespCreateRoom::InternalSwap(RespCreateRoom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(data_, other->data_);
  swap(roomid_, other->roomid_);
}

::google::protobuf::Metadata RespCreateRoom::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RoomProto_2eproto);
  return ::file_level_metadata_RoomProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReqJoinRoom::InitAsDefaultInstance() {
}
class ReqJoinRoom::HasBitSetters {
 public:
  static void set_has_id(ReqJoinRoom* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_roomid(ReqJoinRoom* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqJoinRoom::kIdFieldNumber;
const int ReqJoinRoom::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqJoinRoom::ReqJoinRoom()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.RoomProto.ReqJoinRoom)
}
ReqJoinRoom::ReqJoinRoom(const ReqJoinRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:Proto.RoomProto.ReqJoinRoom)
}

void ReqJoinRoom::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReqJoinRoom_RoomProto_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomid_ = 0u;
}

ReqJoinRoom::~ReqJoinRoom() {
  // @@protoc_insertion_point(destructor:Proto.RoomProto.ReqJoinRoom)
  SharedDtor();
}

void ReqJoinRoom::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqJoinRoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqJoinRoom& ReqJoinRoom::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReqJoinRoom_RoomProto_2eproto.base);
  return *internal_default_instance();
}


void ReqJoinRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.RoomProto.ReqJoinRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  roomid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqJoinRoom::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReqJoinRoom*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Proto.RoomProto.ReqJoinRoom.id");
        auto str = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 roomid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::uint32 value = val;
        msg->set_roomid(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqJoinRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.RoomProto.ReqJoinRoom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Proto.RoomProto.ReqJoinRoom.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_roomid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.RoomProto.ReqJoinRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.RoomProto.ReqJoinRoom)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqJoinRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.RoomProto.ReqJoinRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Proto.RoomProto.ReqJoinRoom.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required uint32 roomid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->roomid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.RoomProto.ReqJoinRoom)
}

::google::protobuf::uint8* ReqJoinRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.RoomProto.ReqJoinRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Proto.RoomProto.ReqJoinRoom.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required uint32 roomid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->roomid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.RoomProto.ReqJoinRoom)
  return target;
}

size_t ReqJoinRoom::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Proto.RoomProto.ReqJoinRoom)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_roomid()) {
    // required uint32 roomid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  return total_size;
}
size_t ReqJoinRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.RoomProto.ReqJoinRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required uint32 roomid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqJoinRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.RoomProto.ReqJoinRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqJoinRoom* source =
      ::google::protobuf::DynamicCastToGenerated<ReqJoinRoom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.RoomProto.ReqJoinRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.RoomProto.ReqJoinRoom)
    MergeFrom(*source);
  }
}

void ReqJoinRoom::MergeFrom(const ReqJoinRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.RoomProto.ReqJoinRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      roomid_ = from.roomid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReqJoinRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.RoomProto.ReqJoinRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqJoinRoom::CopyFrom(const ReqJoinRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.RoomProto.ReqJoinRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqJoinRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ReqJoinRoom::Swap(ReqJoinRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqJoinRoom::InternalSwap(ReqJoinRoom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roomid_, other->roomid_);
}

::google::protobuf::Metadata ReqJoinRoom::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RoomProto_2eproto);
  return ::file_level_metadata_RoomProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RespJoinRoom::InitAsDefaultInstance() {
  ::Proto::RoomProto::_RespJoinRoom_default_instance_._instance.get_mutable()->data_ = const_cast< ::Proto::RoomBase::FlagMsg*>(
      ::Proto::RoomBase::FlagMsg::internal_default_instance());
}
class RespJoinRoom::HasBitSetters {
 public:
  static const ::Proto::RoomBase::FlagMsg& data(const RespJoinRoom* msg);
  static void set_has_data(RespJoinRoom* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::Proto::RoomBase::FlagMsg&
RespJoinRoom::HasBitSetters::data(const RespJoinRoom* msg) {
  return *msg->data_;
}
void RespJoinRoom::clear_data() {
  if (data_ != nullptr) data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void RespJoinRoom::clear_userinfo() {
  userinfo_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RespJoinRoom::kDataFieldNumber;
const int RespJoinRoom::kUserinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RespJoinRoom::RespJoinRoom()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.RoomProto.RespJoinRoom)
}
RespJoinRoom::RespJoinRoom(const RespJoinRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      userinfo_(from.userinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::Proto::RoomBase::FlagMsg(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Proto.RoomProto.RespJoinRoom)
}

void RespJoinRoom::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RespJoinRoom_RoomProto_2eproto.base);
  data_ = nullptr;
}

RespJoinRoom::~RespJoinRoom() {
  // @@protoc_insertion_point(destructor:Proto.RoomProto.RespJoinRoom)
  SharedDtor();
}

void RespJoinRoom::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void RespJoinRoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespJoinRoom& RespJoinRoom::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RespJoinRoom_RoomProto_2eproto.base);
  return *internal_default_instance();
}


void RespJoinRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.RoomProto.RespJoinRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userinfo_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(data_ != nullptr);
    data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RespJoinRoom::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RespJoinRoom*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .Proto.RoomBase.FlagMsg data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Proto::RoomBase::FlagMsg::_InternalParse;
        object = msg->mutable_data();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // repeated .Proto.RoomBase.UserInfo userinfo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Proto::RoomBase::UserInfo::_InternalParse;
          object = msg->add_userinfo();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          bool ok = ctx->ParseExactRange({parser_till_end, object},
                                         ptr, newend);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RespJoinRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.RoomProto.RespJoinRoom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Proto.RoomBase.FlagMsg data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Proto.RoomBase.UserInfo userinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.RoomProto.RespJoinRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.RoomProto.RespJoinRoom)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RespJoinRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.RoomProto.RespJoinRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Proto.RoomBase.FlagMsg data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::data(this), output);
  }

  // repeated .Proto.RoomBase.UserInfo userinfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->userinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->userinfo(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.RoomProto.RespJoinRoom)
}

::google::protobuf::uint8* RespJoinRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.RoomProto.RespJoinRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Proto.RoomBase.FlagMsg data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::data(this), deterministic, target);
  }

  // repeated .Proto.RoomBase.UserInfo userinfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->userinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->userinfo(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.RoomProto.RespJoinRoom)
  return target;
}

size_t RespJoinRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.RoomProto.RespJoinRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Proto.RoomBase.UserInfo userinfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->userinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->userinfo(static_cast<int>(i)));
    }
  }

  // optional .Proto.RoomBase.FlagMsg data = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespJoinRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.RoomProto.RespJoinRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const RespJoinRoom* source =
      ::google::protobuf::DynamicCastToGenerated<RespJoinRoom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.RoomProto.RespJoinRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.RoomProto.RespJoinRoom)
    MergeFrom(*source);
  }
}

void RespJoinRoom::MergeFrom(const RespJoinRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.RoomProto.RespJoinRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  userinfo_.MergeFrom(from.userinfo_);
  if (from.has_data()) {
    mutable_data()->::Proto::RoomBase::FlagMsg::MergeFrom(from.data());
  }
}

void RespJoinRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.RoomProto.RespJoinRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespJoinRoom::CopyFrom(const RespJoinRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.RoomProto.RespJoinRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespJoinRoom::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->userinfo())) return false;
  return true;
}

void RespJoinRoom::Swap(RespJoinRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RespJoinRoom::InternalSwap(RespJoinRoom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&userinfo_)->InternalSwap(CastToBase(&other->userinfo_));
  swap(data_, other->data_);
}

::google::protobuf::Metadata RespJoinRoom::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RoomProto_2eproto);
  return ::file_level_metadata_RoomProto_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace RoomProto
}  // namespace Proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::Proto::RoomProto::ReqCreateRoom* Arena::CreateMaybeMessage< ::Proto::RoomProto::ReqCreateRoom >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::RoomProto::ReqCreateRoom >(arena);
}
template<> PROTOBUF_NOINLINE ::Proto::RoomProto::RespCreateRoom* Arena::CreateMaybeMessage< ::Proto::RoomProto::RespCreateRoom >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::RoomProto::RespCreateRoom >(arena);
}
template<> PROTOBUF_NOINLINE ::Proto::RoomProto::ReqJoinRoom* Arena::CreateMaybeMessage< ::Proto::RoomProto::ReqJoinRoom >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::RoomProto::ReqJoinRoom >(arena);
}
template<> PROTOBUF_NOINLINE ::Proto::RoomProto::RespJoinRoom* Arena::CreateMaybeMessage< ::Proto::RoomProto::RespJoinRoom >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::RoomProto::RespJoinRoom >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
