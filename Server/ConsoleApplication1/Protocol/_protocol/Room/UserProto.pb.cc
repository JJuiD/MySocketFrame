// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserProto.proto

#include "UserProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_RoomBase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FlagMsg_RoomBase_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_RoomBase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserInfo_RoomBase_2eproto;
namespace Proto {
namespace UserProto {
class ReqCreateUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqCreateUser> _instance;
} _ReqCreateUser_default_instance_;
class RespCreateUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RespCreateUser> _instance;
} _RespCreateUser_default_instance_;
class ReqGetUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqGetUser> _instance;
} _ReqGetUser_default_instance_;
class RespGetUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RespGetUser> _instance;
} _RespGetUser_default_instance_;
}  // namespace UserProto
}  // namespace Proto
static void InitDefaultsReqCreateUser_UserProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::UserProto::_ReqCreateUser_default_instance_;
    new (ptr) ::Proto::UserProto::ReqCreateUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::UserProto::ReqCreateUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqCreateUser_UserProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqCreateUser_UserProto_2eproto}, {}};

static void InitDefaultsRespCreateUser_UserProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::UserProto::_RespCreateUser_default_instance_;
    new (ptr) ::Proto::UserProto::RespCreateUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::UserProto::RespCreateUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RespCreateUser_UserProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRespCreateUser_UserProto_2eproto}, {
      &scc_info_FlagMsg_RoomBase_2eproto.base,
      &scc_info_UserInfo_RoomBase_2eproto.base,}};

static void InitDefaultsReqGetUser_UserProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::UserProto::_ReqGetUser_default_instance_;
    new (ptr) ::Proto::UserProto::ReqGetUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::UserProto::ReqGetUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqGetUser_UserProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqGetUser_UserProto_2eproto}, {}};

static void InitDefaultsRespGetUser_UserProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Proto::UserProto::_RespGetUser_default_instance_;
    new (ptr) ::Proto::UserProto::RespGetUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Proto::UserProto::RespGetUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RespGetUser_UserProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRespGetUser_UserProto_2eproto}, {
      &scc_info_FlagMsg_RoomBase_2eproto.base,
      &scc_info_UserInfo_RoomBase_2eproto.base,}};

void InitDefaults_UserProto_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ReqCreateUser_UserProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RespCreateUser_UserProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqGetUser_UserProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RespGetUser_UserProto_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_UserProto_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_UserProto_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_UserProto_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_UserProto_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::ReqCreateUser, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::ReqCreateUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::ReqCreateUser, name_),
  0,
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::RespCreateUser, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::RespCreateUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::RespCreateUser, data_),
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::RespCreateUser, userinfo_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::ReqGetUser, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::ReqGetUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::ReqGetUser, id_),
  0,
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::RespGetUser, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::RespGetUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::RespGetUser, data_),
  PROTOBUF_FIELD_OFFSET(::Proto::UserProto::RespGetUser, userinfo_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::Proto::UserProto::ReqCreateUser)},
  { 7, 14, sizeof(::Proto::UserProto::RespCreateUser)},
  { 16, 22, sizeof(::Proto::UserProto::ReqGetUser)},
  { 23, 30, sizeof(::Proto::UserProto::RespGetUser)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::UserProto::_ReqCreateUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::UserProto::_RespCreateUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::UserProto::_ReqGetUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Proto::UserProto::_RespGetUser_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_UserProto_2eproto = {
  {}, AddDescriptors_UserProto_2eproto, "UserProto.proto", schemas,
  file_default_instances, TableStruct_UserProto_2eproto::offsets,
  file_level_metadata_UserProto_2eproto, 4, file_level_enum_descriptors_UserProto_2eproto, file_level_service_descriptors_UserProto_2eproto,
};

const char descriptor_table_protodef_UserProto_2eproto[] =
  "\n\017UserProto.proto\022\017Proto.UserProto\032\016Room"
  "Base.proto\"\035\n\rReqCreateUser\022\014\n\004name\030\001 \002("
  "\t\"c\n\016RespCreateUser\022%\n\004data\030\001 \001(\0132\027.Prot"
  "o.RoomBase.FlagMsg\022*\n\010userinfo\030\002 \001(\0132\030.P"
  "roto.RoomBase.UserInfo\"\030\n\nReqGetUser\022\n\n\002"
  "id\030\001 \002(\t\"`\n\013RespGetUser\022%\n\004data\030\001 \001(\0132\027."
  "Proto.RoomBase.FlagMsg\022*\n\010userinfo\030\002 \001(\013"
  "2\030.Proto.RoomBase.UserInfo"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_UserProto_2eproto = {
  false, InitDefaults_UserProto_2eproto, 
  descriptor_table_protodef_UserProto_2eproto,
  "UserProto.proto", &assign_descriptors_table_UserProto_2eproto, 306,
};

void AddDescriptors_UserProto_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_RoomBase_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_UserProto_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_UserProto_2eproto = []() { AddDescriptors_UserProto_2eproto(); return true; }();
namespace Proto {
namespace UserProto {

// ===================================================================

void ReqCreateUser::InitAsDefaultInstance() {
}
class ReqCreateUser::HasBitSetters {
 public:
  static void set_has_name(ReqCreateUser* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqCreateUser::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqCreateUser::ReqCreateUser()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.UserProto.ReqCreateUser)
}
ReqCreateUser::ReqCreateUser(const ReqCreateUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Proto.UserProto.ReqCreateUser)
}

void ReqCreateUser::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReqCreateUser_UserProto_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqCreateUser::~ReqCreateUser() {
  // @@protoc_insertion_point(destructor:Proto.UserProto.ReqCreateUser)
  SharedDtor();
}

void ReqCreateUser::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqCreateUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqCreateUser& ReqCreateUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReqCreateUser_UserProto_2eproto.base);
  return *internal_default_instance();
}


void ReqCreateUser::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.UserProto.ReqCreateUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqCreateUser::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReqCreateUser*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Proto.UserProto.ReqCreateUser.name");
        auto str = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqCreateUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.UserProto.ReqCreateUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Proto.UserProto.ReqCreateUser.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.UserProto.ReqCreateUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.UserProto.ReqCreateUser)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqCreateUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.UserProto.ReqCreateUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Proto.UserProto.ReqCreateUser.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.UserProto.ReqCreateUser)
}

::google::protobuf::uint8* ReqCreateUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.UserProto.ReqCreateUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Proto.UserProto.ReqCreateUser.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.UserProto.ReqCreateUser)
  return target;
}

size_t ReqCreateUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.UserProto.ReqCreateUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqCreateUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.UserProto.ReqCreateUser)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqCreateUser* source =
      ::google::protobuf::DynamicCastToGenerated<ReqCreateUser>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.UserProto.ReqCreateUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.UserProto.ReqCreateUser)
    MergeFrom(*source);
  }
}

void ReqCreateUser::MergeFrom(const ReqCreateUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.UserProto.ReqCreateUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    _has_bits_[0] |= 0x00000001u;
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ReqCreateUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.UserProto.ReqCreateUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqCreateUser::CopyFrom(const ReqCreateUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.UserProto.ReqCreateUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCreateUser::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ReqCreateUser::Swap(ReqCreateUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqCreateUser::InternalSwap(ReqCreateUser* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ReqCreateUser::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UserProto_2eproto);
  return ::file_level_metadata_UserProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RespCreateUser::InitAsDefaultInstance() {
  ::Proto::UserProto::_RespCreateUser_default_instance_._instance.get_mutable()->data_ = const_cast< ::Proto::RoomBase::FlagMsg*>(
      ::Proto::RoomBase::FlagMsg::internal_default_instance());
  ::Proto::UserProto::_RespCreateUser_default_instance_._instance.get_mutable()->userinfo_ = const_cast< ::Proto::RoomBase::UserInfo*>(
      ::Proto::RoomBase::UserInfo::internal_default_instance());
}
class RespCreateUser::HasBitSetters {
 public:
  static const ::Proto::RoomBase::FlagMsg& data(const RespCreateUser* msg);
  static void set_has_data(RespCreateUser* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::Proto::RoomBase::UserInfo& userinfo(const RespCreateUser* msg);
  static void set_has_userinfo(RespCreateUser* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::Proto::RoomBase::FlagMsg&
RespCreateUser::HasBitSetters::data(const RespCreateUser* msg) {
  return *msg->data_;
}
const ::Proto::RoomBase::UserInfo&
RespCreateUser::HasBitSetters::userinfo(const RespCreateUser* msg) {
  return *msg->userinfo_;
}
void RespCreateUser::clear_data() {
  if (data_ != nullptr) data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void RespCreateUser::clear_userinfo() {
  if (userinfo_ != nullptr) userinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RespCreateUser::kDataFieldNumber;
const int RespCreateUser::kUserinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RespCreateUser::RespCreateUser()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.UserProto.RespCreateUser)
}
RespCreateUser::RespCreateUser(const RespCreateUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::Proto::RoomBase::FlagMsg(*from.data_);
  } else {
    data_ = nullptr;
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::Proto::RoomBase::UserInfo(*from.userinfo_);
  } else {
    userinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Proto.UserProto.RespCreateUser)
}

void RespCreateUser::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RespCreateUser_UserProto_2eproto.base);
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userinfo_) -
      reinterpret_cast<char*>(&data_)) + sizeof(userinfo_));
}

RespCreateUser::~RespCreateUser() {
  // @@protoc_insertion_point(destructor:Proto.UserProto.RespCreateUser)
  SharedDtor();
}

void RespCreateUser::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
  if (this != internal_default_instance()) delete userinfo_;
}

void RespCreateUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespCreateUser& RespCreateUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RespCreateUser_UserProto_2eproto.base);
  return *internal_default_instance();
}


void RespCreateUser::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.UserProto.RespCreateUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(data_ != nullptr);
      data_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(userinfo_ != nullptr);
      userinfo_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RespCreateUser::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RespCreateUser*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .Proto.RoomBase.FlagMsg data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Proto::RoomBase::FlagMsg::_InternalParse;
        object = msg->mutable_data();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // optional .Proto.RoomBase.UserInfo userinfo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Proto::RoomBase::UserInfo::_InternalParse;
        object = msg->mutable_userinfo();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RespCreateUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.UserProto.RespCreateUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Proto.RoomBase.FlagMsg data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Proto.RoomBase.UserInfo userinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.UserProto.RespCreateUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.UserProto.RespCreateUser)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RespCreateUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.UserProto.RespCreateUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Proto.RoomBase.FlagMsg data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::data(this), output);
  }

  // optional .Proto.RoomBase.UserInfo userinfo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::userinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.UserProto.RespCreateUser)
}

::google::protobuf::uint8* RespCreateUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.UserProto.RespCreateUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Proto.RoomBase.FlagMsg data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::data(this), deterministic, target);
  }

  // optional .Proto.RoomBase.UserInfo userinfo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::userinfo(this), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.UserProto.RespCreateUser)
  return target;
}

size_t RespCreateUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.UserProto.RespCreateUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Proto.RoomBase.FlagMsg data = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_);
    }

    // optional .Proto.RoomBase.UserInfo userinfo = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *userinfo_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespCreateUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.UserProto.RespCreateUser)
  GOOGLE_DCHECK_NE(&from, this);
  const RespCreateUser* source =
      ::google::protobuf::DynamicCastToGenerated<RespCreateUser>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.UserProto.RespCreateUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.UserProto.RespCreateUser)
    MergeFrom(*source);
  }
}

void RespCreateUser::MergeFrom(const RespCreateUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.UserProto.RespCreateUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_data()->::Proto::RoomBase::FlagMsg::MergeFrom(from.data());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_userinfo()->::Proto::RoomBase::UserInfo::MergeFrom(from.userinfo());
    }
  }
}

void RespCreateUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.UserProto.RespCreateUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespCreateUser::CopyFrom(const RespCreateUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.UserProto.RespCreateUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespCreateUser::IsInitialized() const {
  if (has_userinfo()) {
    if (!this->userinfo_->IsInitialized()) return false;
  }
  return true;
}

void RespCreateUser::Swap(RespCreateUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RespCreateUser::InternalSwap(RespCreateUser* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(data_, other->data_);
  swap(userinfo_, other->userinfo_);
}

::google::protobuf::Metadata RespCreateUser::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UserProto_2eproto);
  return ::file_level_metadata_UserProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReqGetUser::InitAsDefaultInstance() {
}
class ReqGetUser::HasBitSetters {
 public:
  static void set_has_id(ReqGetUser* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqGetUser::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqGetUser::ReqGetUser()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.UserProto.ReqGetUser)
}
ReqGetUser::ReqGetUser(const ReqGetUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:Proto.UserProto.ReqGetUser)
}

void ReqGetUser::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReqGetUser_UserProto_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqGetUser::~ReqGetUser() {
  // @@protoc_insertion_point(destructor:Proto.UserProto.ReqGetUser)
  SharedDtor();
}

void ReqGetUser::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqGetUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqGetUser& ReqGetUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReqGetUser_UserProto_2eproto.base);
  return *internal_default_instance();
}


void ReqGetUser::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.UserProto.ReqGetUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqGetUser::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReqGetUser*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Proto.UserProto.ReqGetUser.id");
        auto str = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqGetUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.UserProto.ReqGetUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Proto.UserProto.ReqGetUser.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.UserProto.ReqGetUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.UserProto.ReqGetUser)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqGetUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.UserProto.ReqGetUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Proto.UserProto.ReqGetUser.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.UserProto.ReqGetUser)
}

::google::protobuf::uint8* ReqGetUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.UserProto.ReqGetUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Proto.UserProto.ReqGetUser.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.UserProto.ReqGetUser)
  return target;
}

size_t ReqGetUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.UserProto.ReqGetUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGetUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.UserProto.ReqGetUser)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGetUser* source =
      ::google::protobuf::DynamicCastToGenerated<ReqGetUser>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.UserProto.ReqGetUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.UserProto.ReqGetUser)
    MergeFrom(*source);
  }
}

void ReqGetUser::MergeFrom(const ReqGetUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.UserProto.ReqGetUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    _has_bits_[0] |= 0x00000001u;
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void ReqGetUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.UserProto.ReqGetUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGetUser::CopyFrom(const ReqGetUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.UserProto.ReqGetUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGetUser::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ReqGetUser::Swap(ReqGetUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqGetUser::InternalSwap(ReqGetUser* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ReqGetUser::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UserProto_2eproto);
  return ::file_level_metadata_UserProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RespGetUser::InitAsDefaultInstance() {
  ::Proto::UserProto::_RespGetUser_default_instance_._instance.get_mutable()->data_ = const_cast< ::Proto::RoomBase::FlagMsg*>(
      ::Proto::RoomBase::FlagMsg::internal_default_instance());
  ::Proto::UserProto::_RespGetUser_default_instance_._instance.get_mutable()->userinfo_ = const_cast< ::Proto::RoomBase::UserInfo*>(
      ::Proto::RoomBase::UserInfo::internal_default_instance());
}
class RespGetUser::HasBitSetters {
 public:
  static const ::Proto::RoomBase::FlagMsg& data(const RespGetUser* msg);
  static void set_has_data(RespGetUser* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::Proto::RoomBase::UserInfo& userinfo(const RespGetUser* msg);
  static void set_has_userinfo(RespGetUser* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::Proto::RoomBase::FlagMsg&
RespGetUser::HasBitSetters::data(const RespGetUser* msg) {
  return *msg->data_;
}
const ::Proto::RoomBase::UserInfo&
RespGetUser::HasBitSetters::userinfo(const RespGetUser* msg) {
  return *msg->userinfo_;
}
void RespGetUser::clear_data() {
  if (data_ != nullptr) data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void RespGetUser::clear_userinfo() {
  if (userinfo_ != nullptr) userinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RespGetUser::kDataFieldNumber;
const int RespGetUser::kUserinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RespGetUser::RespGetUser()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.UserProto.RespGetUser)
}
RespGetUser::RespGetUser(const RespGetUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::Proto::RoomBase::FlagMsg(*from.data_);
  } else {
    data_ = nullptr;
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::Proto::RoomBase::UserInfo(*from.userinfo_);
  } else {
    userinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Proto.UserProto.RespGetUser)
}

void RespGetUser::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RespGetUser_UserProto_2eproto.base);
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userinfo_) -
      reinterpret_cast<char*>(&data_)) + sizeof(userinfo_));
}

RespGetUser::~RespGetUser() {
  // @@protoc_insertion_point(destructor:Proto.UserProto.RespGetUser)
  SharedDtor();
}

void RespGetUser::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
  if (this != internal_default_instance()) delete userinfo_;
}

void RespGetUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespGetUser& RespGetUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RespGetUser_UserProto_2eproto.base);
  return *internal_default_instance();
}


void RespGetUser::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.UserProto.RespGetUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(data_ != nullptr);
      data_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(userinfo_ != nullptr);
      userinfo_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RespGetUser::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RespGetUser*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .Proto.RoomBase.FlagMsg data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Proto::RoomBase::FlagMsg::_InternalParse;
        object = msg->mutable_data();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // optional .Proto.RoomBase.UserInfo userinfo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Proto::RoomBase::UserInfo::_InternalParse;
        object = msg->mutable_userinfo();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RespGetUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.UserProto.RespGetUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Proto.RoomBase.FlagMsg data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Proto.RoomBase.UserInfo userinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.UserProto.RespGetUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.UserProto.RespGetUser)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RespGetUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.UserProto.RespGetUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Proto.RoomBase.FlagMsg data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::data(this), output);
  }

  // optional .Proto.RoomBase.UserInfo userinfo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::userinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.UserProto.RespGetUser)
}

::google::protobuf::uint8* RespGetUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Proto.UserProto.RespGetUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .Proto.RoomBase.FlagMsg data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::data(this), deterministic, target);
  }

  // optional .Proto.RoomBase.UserInfo userinfo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::userinfo(this), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.UserProto.RespGetUser)
  return target;
}

size_t RespGetUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.UserProto.RespGetUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Proto.RoomBase.FlagMsg data = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_);
    }

    // optional .Proto.RoomBase.UserInfo userinfo = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *userinfo_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespGetUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Proto.UserProto.RespGetUser)
  GOOGLE_DCHECK_NE(&from, this);
  const RespGetUser* source =
      ::google::protobuf::DynamicCastToGenerated<RespGetUser>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Proto.UserProto.RespGetUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Proto.UserProto.RespGetUser)
    MergeFrom(*source);
  }
}

void RespGetUser::MergeFrom(const RespGetUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.UserProto.RespGetUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_data()->::Proto::RoomBase::FlagMsg::MergeFrom(from.data());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_userinfo()->::Proto::RoomBase::UserInfo::MergeFrom(from.userinfo());
    }
  }
}

void RespGetUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Proto.UserProto.RespGetUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespGetUser::CopyFrom(const RespGetUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.UserProto.RespGetUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespGetUser::IsInitialized() const {
  if (has_userinfo()) {
    if (!this->userinfo_->IsInitialized()) return false;
  }
  return true;
}

void RespGetUser::Swap(RespGetUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RespGetUser::InternalSwap(RespGetUser* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(data_, other->data_);
  swap(userinfo_, other->userinfo_);
}

::google::protobuf::Metadata RespGetUser::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UserProto_2eproto);
  return ::file_level_metadata_UserProto_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace UserProto
}  // namespace Proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::Proto::UserProto::ReqCreateUser* Arena::CreateMaybeMessage< ::Proto::UserProto::ReqCreateUser >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::UserProto::ReqCreateUser >(arena);
}
template<> PROTOBUF_NOINLINE ::Proto::UserProto::RespCreateUser* Arena::CreateMaybeMessage< ::Proto::UserProto::RespCreateUser >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::UserProto::RespCreateUser >(arena);
}
template<> PROTOBUF_NOINLINE ::Proto::UserProto::ReqGetUser* Arena::CreateMaybeMessage< ::Proto::UserProto::ReqGetUser >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::UserProto::ReqGetUser >(arena);
}
template<> PROTOBUF_NOINLINE ::Proto::UserProto::RespGetUser* Arena::CreateMaybeMessage< ::Proto::UserProto::RespGetUser >(Arena* arena) {
  return Arena::CreateInternal< ::Proto::UserProto::RespGetUser >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
