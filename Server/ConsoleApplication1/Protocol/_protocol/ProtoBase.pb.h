// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBase.proto

#ifndef PROTOBUF_INCLUDED_ProtoBase_2eproto
#define PROTOBUF_INCLUDED_ProtoBase_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ProtoBase_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_ProtoBase_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_ProtoBase_2eproto();
namespace Proto {
class CMD_HEART;
class CMD_HEARTDefaultTypeInternal;
extern CMD_HEARTDefaultTypeInternal _CMD_HEART_default_instance_;
class CMD_TEST;
class CMD_TESTDefaultTypeInternal;
extern CMD_TESTDefaultTypeInternal _CMD_TEST_default_instance_;
class ProtoBaseCmd;
class ProtoBaseCmdDefaultTypeInternal;
extern ProtoBaseCmdDefaultTypeInternal _ProtoBaseCmd_default_instance_;
}  // namespace Proto
namespace google {
namespace protobuf {
template<> ::Proto::CMD_HEART* Arena::CreateMaybeMessage<::Proto::CMD_HEART>(Arena*);
template<> ::Proto::CMD_TEST* Arena::CreateMaybeMessage<::Proto::CMD_TEST>(Arena*);
template<> ::Proto::ProtoBaseCmd* Arena::CreateMaybeMessage<::Proto::ProtoBaseCmd>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Proto {

enum ProtoCommand {
  ProtoCommand_Heart = 1,
  ProtoCommand_TestModel = 2,
  ProtoCommand_Game = 3,
  ProtoCommand_Room = 4
};
bool ProtoCommand_IsValid(int value);
const ProtoCommand ProtoCommand_MIN = ProtoCommand_Heart;
const ProtoCommand ProtoCommand_MAX = ProtoCommand_Room;
const int ProtoCommand_ARRAYSIZE = ProtoCommand_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtoCommand_descriptor();
inline const ::std::string& ProtoCommand_Name(ProtoCommand value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtoCommand_descriptor(), value);
}
inline bool ProtoCommand_Parse(
    const ::std::string& name, ProtoCommand* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtoCommand>(
    ProtoCommand_descriptor(), name, value);
}
// ===================================================================

class ProtoBaseCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto.ProtoBaseCmd) */ {
 public:
  ProtoBaseCmd();
  virtual ~ProtoBaseCmd();

  ProtoBaseCmd(const ProtoBaseCmd& from);

  inline ProtoBaseCmd& operator=(const ProtoBaseCmd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoBaseCmd(ProtoBaseCmd&& from) noexcept
    : ProtoBaseCmd() {
    *this = ::std::move(from);
  }

  inline ProtoBaseCmd& operator=(ProtoBaseCmd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProtoBaseCmd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoBaseCmd* internal_default_instance() {
    return reinterpret_cast<const ProtoBaseCmd*>(
               &_ProtoBaseCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ProtoBaseCmd* other);
  friend void swap(ProtoBaseCmd& a, ProtoBaseCmd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoBaseCmd* New() const final {
    return CreateMaybeMessage<ProtoBaseCmd>(nullptr);
  }

  ProtoBaseCmd* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProtoBaseCmd>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProtoBaseCmd& from);
  void MergeFrom(const ProtoBaseCmd& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoBaseCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes buffer = 3;
  bool has_buffer() const;
  void clear_buffer();
  static const int kBufferFieldNumber = 3;
  const ::std::string& buffer() const;
  void set_buffer(const ::std::string& value);
  #if LANG_CXX11
  void set_buffer(::std::string&& value);
  #endif
  void set_buffer(const char* value);
  void set_buffer(const void* value, size_t size);
  ::std::string* mutable_buffer();
  ::std::string* release_buffer();
  void set_allocated_buffer(::std::string* buffer);

  // required uint32 CmdInfo = 2;
  bool has_cmdinfo() const;
  void clear_cmdinfo();
  static const int kCmdInfoFieldNumber = 2;
  ::google::protobuf::uint32 cmdinfo() const;
  void set_cmdinfo(::google::protobuf::uint32 value);

  // required .Proto.ProtoCommand CmdHead = 1;
  bool has_cmdhead() const;
  void clear_cmdhead();
  static const int kCmdHeadFieldNumber = 1;
  ::Proto::ProtoCommand cmdhead() const;
  void set_cmdhead(::Proto::ProtoCommand value);

  // @@protoc_insertion_point(class_scope:Proto.ProtoBaseCmd)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr buffer_;
  ::google::protobuf::uint32 cmdinfo_;
  int cmdhead_;
  friend struct ::TableStruct_ProtoBase_2eproto;
};
// -------------------------------------------------------------------

class CMD_HEART : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto.CMD_HEART) */ {
 public:
  CMD_HEART();
  virtual ~CMD_HEART();

  CMD_HEART(const CMD_HEART& from);

  inline CMD_HEART& operator=(const CMD_HEART& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_HEART(CMD_HEART&& from) noexcept
    : CMD_HEART() {
    *this = ::std::move(from);
  }

  inline CMD_HEART& operator=(CMD_HEART&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMD_HEART& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_HEART* internal_default_instance() {
    return reinterpret_cast<const CMD_HEART*>(
               &_CMD_HEART_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CMD_HEART* other);
  friend void swap(CMD_HEART& a, CMD_HEART& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_HEART* New() const final {
    return CreateMaybeMessage<CMD_HEART>(nullptr);
  }

  CMD_HEART* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMD_HEART>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMD_HEART& from);
  void MergeFrom(const CMD_HEART& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_HEART* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Proto.CMD_HEART)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ProtoBase_2eproto;
};
// -------------------------------------------------------------------

class CMD_TEST : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto.CMD_TEST) */ {
 public:
  CMD_TEST();
  virtual ~CMD_TEST();

  CMD_TEST(const CMD_TEST& from);

  inline CMD_TEST& operator=(const CMD_TEST& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD_TEST(CMD_TEST&& from) noexcept
    : CMD_TEST() {
    *this = ::std::move(from);
  }

  inline CMD_TEST& operator=(CMD_TEST&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMD_TEST& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD_TEST* internal_default_instance() {
    return reinterpret_cast<const CMD_TEST*>(
               &_CMD_TEST_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CMD_TEST* other);
  friend void swap(CMD_TEST& a, CMD_TEST& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD_TEST* New() const final {
    return CreateMaybeMessage<CMD_TEST>(nullptr);
  }

  CMD_TEST* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMD_TEST>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMD_TEST& from);
  void MergeFrom(const CMD_TEST& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_TEST* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const void* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:Proto.CMD_TEST)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  friend struct ::TableStruct_ProtoBase_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoBaseCmd

// required .Proto.ProtoCommand CmdHead = 1;
inline bool ProtoBaseCmd::has_cmdhead() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoBaseCmd::clear_cmdhead() {
  cmdhead_ = 1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::Proto::ProtoCommand ProtoBaseCmd::cmdhead() const {
  // @@protoc_insertion_point(field_get:Proto.ProtoBaseCmd.CmdHead)
  return static_cast< ::Proto::ProtoCommand >(cmdhead_);
}
inline void ProtoBaseCmd::set_cmdhead(::Proto::ProtoCommand value) {
  assert(::Proto::ProtoCommand_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  cmdhead_ = value;
  // @@protoc_insertion_point(field_set:Proto.ProtoBaseCmd.CmdHead)
}

// required uint32 CmdInfo = 2;
inline bool ProtoBaseCmd::has_cmdinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoBaseCmd::clear_cmdinfo() {
  cmdinfo_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 ProtoBaseCmd::cmdinfo() const {
  // @@protoc_insertion_point(field_get:Proto.ProtoBaseCmd.CmdInfo)
  return cmdinfo_;
}
inline void ProtoBaseCmd::set_cmdinfo(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  cmdinfo_ = value;
  // @@protoc_insertion_point(field_set:Proto.ProtoBaseCmd.CmdInfo)
}

// required bytes buffer = 3;
inline bool ProtoBaseCmd::has_buffer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoBaseCmd::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ProtoBaseCmd::buffer() const {
  // @@protoc_insertion_point(field_get:Proto.ProtoBaseCmd.buffer)
  return buffer_.GetNoArena();
}
inline void ProtoBaseCmd::set_buffer(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.ProtoBaseCmd.buffer)
}
#if LANG_CXX11
inline void ProtoBaseCmd::set_buffer(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  buffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto.ProtoBaseCmd.buffer)
}
#endif
inline void ProtoBaseCmd::set_buffer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.ProtoBaseCmd.buffer)
}
inline void ProtoBaseCmd::set_buffer(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.ProtoBaseCmd.buffer)
}
inline ::std::string* ProtoBaseCmd::mutable_buffer() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:Proto.ProtoBaseCmd.buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoBaseCmd::release_buffer() {
  // @@protoc_insertion_point(field_release:Proto.ProtoBaseCmd.buffer)
  if (!has_buffer()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return buffer_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoBaseCmd::set_allocated_buffer(::std::string* buffer) {
  if (buffer != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:Proto.ProtoBaseCmd.buffer)
}

// -------------------------------------------------------------------

// CMD_HEART

// -------------------------------------------------------------------

// CMD_TEST

// optional bytes msg = 1;
inline bool CMD_TEST::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_TEST::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMD_TEST::msg() const {
  // @@protoc_insertion_point(field_get:Proto.CMD_TEST.msg)
  return msg_.GetNoArena();
}
inline void CMD_TEST::set_msg(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.CMD_TEST.msg)
}
#if LANG_CXX11
inline void CMD_TEST::set_msg(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto.CMD_TEST.msg)
}
#endif
inline void CMD_TEST::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.CMD_TEST.msg)
}
inline void CMD_TEST::set_msg(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.CMD_TEST.msg)
}
inline ::std::string* CMD_TEST::mutable_msg() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:Proto.CMD_TEST.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_TEST::release_msg() {
  // @@protoc_insertion_point(field_release:Proto.CMD_TEST.msg)
  if (!has_msg()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_TEST::set_allocated_msg(::std::string* msg) {
  if (msg != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:Proto.CMD_TEST.msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Proto::ProtoCommand> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Proto::ProtoCommand>() {
  return ::Proto::ProtoCommand_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_ProtoBase_2eproto
